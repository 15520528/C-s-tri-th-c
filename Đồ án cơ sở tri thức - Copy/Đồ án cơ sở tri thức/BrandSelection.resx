<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEIUlEQVRYR91YS08TURSu0ZX6NzRRExf6B6SdmU4lGJV2wUOrrJWCPFa8ceNCHn/DtQtcuetjINES
        eVTjqygbFULbmS5aHL9TTqVMb1tm2iHGL/lCac+555s75557z/X8t4i3tV2P+XyjCUV5lVDVL/irJ2TZ
        KJE+4zvN71+KStJIzOu9xm7u4vWNG+fjsjyEwFtaIGC8f/Agvz0yYu5MTZm5Z8+OcGdy0tweHjZT4XBe
        u3nTgE8aD/QkqSjneLjWAcLOxCVpGOKy693d+o/xcTM/P2+LP8bGzLXu7hyNgRkepDF5+OagtbVdwYAf
        V0MhfXd2VhjcDmmM1c5OPeH3f4j7fJc5jDPEFSVIOfVtYGA/PzcnDOiIGGsrEtnHbBpxv7+Tw9kDXulD
        TVUNyiVhkBbw18SEiZnMJyTpPoc9HqKyfAdJnd+dmREO3EruIAbFisnyLQ5fHzFJukRl4peLM2flTyw6
        pJOe8PkusgwxaGVR8pZyTjCQm0z39+8jdupFKHSa5VRDQylJhkKGaADXiYWTDAYNLJwIyzkKKqCY5szu
        06fiAU6AlI9Ir72Vjo6zLOsQVOXXe3tzIscjXFw0i6mUWXz3zswvLIhtKgkbsiUf8hXaVHC9pyeLCjLA
        sg5gejynUI++05YlcvpLCraxYZZRfPtWbFfBYjLJ1rCHb6OH4tKTZmkHQEW/utLenhU5WFlYXuZwB6g5
        kzxzlShoWrWdlcjFlUAge2SXQQ0a/dDXlxc6CNhQpFNxTBxCDGh6wvKwelV1iU4eIuNarCmySXHE7aEh
        c1lVX7I8jwdnt/TO9LTQuB6rRK6tlVgJu+KItBYwaZ9ZHnJQlnU6w4mMG5EE1IITccQstKDkZVleaXsr
        Gk2cVqwzSXAqjqg/f26SJpbHAvGlyLghKecsr5VQtXBskASiFhZYXhOvuIa4MpyKrHrFlJC2F4lAHL1W
        a06SjV2RvEg+sjwHZaaGuPLvzYqsKjPIwUEqjiLjKjYQV2YzIjfDYT3q9T5ieRVbXaOVfExxZToSKdrq
        CNRo08lW6FQmCXT5sEAtLQ4Ln1jWIei4hb5VFzlZWXzzpu7MWUm25CP6zcq1rq5c1XGLQAdWHBYzreh9
        nbLugZWA9m9wNRjMiJxdJ3IPDf1eVJIOF4cV1DShBUyhqS4KB3GR6cePi4i9UbdpIvzTbWcZUZ/vNp5G
        P8HGXY95vR0c/njA04TJ0fWrD1WlVvMeh7UHPFUANSmDRr7QsIjbIcZKRyIFanOxKPwczhkoL6jjp9Xd
        suu3u3czmqJsYuYucJjmQKubCjk9MV1CNnGBSZeXe3R70LILzEpg0IMrYEVJ47SRo0298gq4lAag5Qo4
        txwI5ODz1bUrYBHKl+hYSEu0dyZkOYf/TfA3fS59h99O9BL95OHx/AHEh/bucIXf/wAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>